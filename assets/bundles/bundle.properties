# Category: Logic Statements

# IO

lst.readmessage = Reads the message in message blocks.
lst.keybindsensor = Senses the selected keybind's pressed state and axis from the [accent]client[].\nAxis defaults to 0 if inapplicable.

# Operation

lst.rand = A statement with randomization utilities.
lst.stringop = A statement with string utilities.
lst.colorop = A statement with color utilities.

# World

lst.shake = Shakes the camera. Shake intensity is customizable.
lst.addpuddle = Adds a puddle on a position.
lst.addfire = Adds a fire on a position.

# Miscellaneous

lst.arrival.gif = Does nothing.

# Category: Logic Enums

# Rand Operations

lenum.nextdouble = Returns a pseudo-random, uniformly distributed double value.
lenum.nextlong = Returns a pseudo-random, uniformly distributed long value.
lenum.nextint = Returns a pseudo-random, uniformly distributed integer value.
lenum.random = Returns a random number from 0 to a value.
lenum.random2 = Returns a random number from a value to another value.

# String Operations

lenum.charat = Returns the value at the specified index.\nReturns null if specified index is out of bounds.
lenum.concat = Concatenates a string to the end of this string.
lenum.isempty = Returns true if, and only if, [accent]length[] is 0.
lenum.length = Returns the length of this string.
lenum.tolowercase = Converts all of the characters in this string to lower case.
lenum.touppercase = Converts all of the characters in this string to upper case.

# Color Operations

lenum.mul = Multiplies RGB components of the main color with the given value.
lenum.mulc = Multiplies the main color with the given color.
lenum.mula = Multiplies RGBA components of the main color with the given value.
lenum.mulrgba = Multiplies the main color's components by the given ones.
lenum.addrgba = Adds the given color component values\nto the main color's components.
lenum.addrgb = Adds the given color component values\nto the main color's components, without the alpha component.
lenum.addc = Adds the given color to the main color.
lenum.subrgba = Subtracts the given color component values\nfrom the main color's components.
lenum.subrgb = Subtracts the given color component\nvalues from the main color's components,\nwithout the alpha component.
lenum.subc = Subtracts the given color from the main color.
lenum.sum = Returns the sum of the RGB values of the main color.
lenum.inv = Inverts the main color's RGB.
lenum.lerp = Linearly interpolates between the main color and the target color by\n[accent]t[] which is in the range [0,1].\nThe result is stored in the main color.
lenum.lerprgba = Linearly interpolates between the main color and the target color by\n[accent]t[] which is in the range [0,1].\nThe result is stored in the main color.
lenum.premula = Multiplies the RGB values of the main color by the alpha value.
lenum.hue = Returns the hue of the main color.
lenum.sat = Returns the saturation of the main color.
lenum.val = Returns the value of the main color.
lenum.sethue = Sets the hue of the main color to the given value.
lenum.setsat = Sets the saturation of the main color to the given value.
lenum.setval = Sets the value of the main color to the given value.
lenum.shifthue = Shifts the hue of the main color.
lenum.shiftsat = Shifts the saturation of the main color.
lenum.shiftval = Shifts the value of the main color.
lenum.coltostring = Returns the hex code of the main color in the form of a string.

# Category: Logic Categories

lcategory.misc = Miscellaneous
lcategory.misc.description = Other stuff.
